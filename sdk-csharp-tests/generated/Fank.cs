// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fank/fank/fank.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Io.Token.Proto.Bankapi {

  /// <summary>Holder for reflection information generated from fank/fank/fank.proto</summary>
  public static partial class FankReflection {

    #region Descriptor
    /// <summary>File descriptor for fank/fank/fank.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FankReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRmYW5rL2ZhbmsvZmFuay5wcm90bxIWaW8udG9rZW4ucHJvdG8uYmFua2Fw",
            "aRocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90bxoLYWxpYXMucHJvdG8a",
            "DG1lbWJlci5wcm90bxoLbW9uZXkucHJvdG8aDmJhbmtsaW5rLnByb3RvGhJu",
            "b3RpZmljYXRpb24ucHJvdG8iOwoGQ2xpZW50EgoKAmlkGAEgASgJEhIKCmZp",
            "cnN0X25hbWUYAiABKAkSEQoJbGFzdF9uYW1lGAMgASgJImQKB0FjY291bnQS",
            "DAoEbmFtZRgCIAEoCRIWCg5hY2NvdW50X251bWJlchgEIAEoCRIzCgdiYWxh",
            "bmNlGAUgASgLMiIuaW8udG9rZW4ucHJvdG8uY29tbW9uLm1vbmV5Lk1vbmV5",
            "IkYKEEFkZENsaWVudFJlcXVlc3QSCwoDYmljGAEgASgJEhIKCmZpcnN0X25h",
            "bWUYAiABKAkSEQoJbGFzdF9uYW1lGAMgASgJIkMKEUFkZENsaWVudFJlc3Bv",
            "bnNlEi4KBmNsaWVudBgBIAEoCzIeLmlvLnRva2VuLnByb3RvLmJhbmthcGku",
            "Q2xpZW50IjIKEEdldENsaWVudFJlcXVlc3QSCwoDYmljGAEgASgJEhEKCWNs",
            "aWVudF9pZBgCIAEoCSJDChFHZXRDbGllbnRSZXNwb25zZRIuCgZjbGllbnQY",
            "ASABKAsyHi5pby50b2tlbi5wcm90by5iYW5rYXBpLkNsaWVudCKfAQoRQWRk",
            "QWNjb3VudFJlcXVlc3QSCwoDYmljGAEgASgJEhEKCWNsaWVudF9pZBgCIAEo",
            "CRIMCgRuYW1lGAMgASgJEhYKDmFjY291bnRfbnVtYmVyGAQgASgJEjMKB2Jh",
            "bGFuY2UYBSABKAsyIi5pby50b2tlbi5wcm90by5jb21tb24ubW9uZXkuTW9u",
            "ZXkSDwoHcHJvZmlsZRgGIAEoCSJGChJBZGRBY2NvdW50UmVzcG9uc2USMAoH",
            "YWNjb3VudBgBIAEoCzIfLmlvLnRva2VuLnByb3RvLmJhbmthcGkuQWNjb3Vu",
            "dCI0ChJHZXRBY2NvdW50c1JlcXVlc3QSCwoDYmljGAEgASgJEhEKCWNsaWVu",
            "dF9pZBgCIAEoCSJHChNHZXRBY2NvdW50c1Jlc3BvbnNlEjAKB2FjY291bnQY",
            "ASADKAsyHy5pby50b2tlbi5wcm90by5iYW5rYXBpLkFjY291bnQiSwoRR2V0",
            "QWNjb3VudFJlcXVlc3QSCwoDYmljGAEgASgJEhEKCWNsaWVudF9pZBgCIAEo",
            "CRIWCg5hY2NvdW50X251bWJlchgDIAEoCSJGChJHZXRBY2NvdW50UmVzcG9u",
            "c2USMAoHYWNjb3VudBgBIAEoCzIfLmlvLnRva2VuLnByb3RvLmJhbmthcGku",
            "QWNjb3VudCJiChxBdXRob3JpemVMaW5rQWNjb3VudHNSZXF1ZXN0EgsKA2Jp",
            "YxgBIAEoCRIQCghtZW1iZXJJZBgCIAEoCRIRCgljbGllbnRfaWQYAyABKAkS",
            "EAoIYWNjb3VudHMYBCADKAkiSAoWR2V0Tm90aWZpY2F0aW9uUmVxdWVzdBIV",
            "Cg1zdWJzY3JpYmVyX2lkGAEgASgJEhcKD25vdGlmaWNhdGlvbl9pZBgCIAEo",
            "CSJhChdHZXROb3RpZmljYXRpb25SZXNwb25zZRJGCgxub3RpZmljYXRpb24Y",
            "ASABKAsyMC5pby50b2tlbi5wcm90by5jb21tb24ubm90aWZpY2F0aW9uLk5v",
            "dGlmaWNhdGlvbiIwChdHZXROb3RpZmljYXRpb25zUmVxdWVzdBIVCg1zdWJz",
            "Y3JpYmVyX2lkGAEgASgJImMKGEdldE5vdGlmaWNhdGlvbnNSZXNwb25zZRJH",
            "Cg1ub3RpZmljYXRpb25zGAEgAygLMjAuaW8udG9rZW4ucHJvdG8uY29tbW9u",
            "Lm5vdGlmaWNhdGlvbi5Ob3RpZmljYXRpb24ikgEKGkdldE9hdXRoQWNjZXNz",
            "VG9rZW5SZXF1ZXN0EgsKA2JpYxgBIAEoCRIPCgdwcm9maWxlGAIgASgJEhAK",
            "CG1lbWJlcklkGAMgASgJEjEKCGFjY291bnRzGAQgAygLMh8uaW8udG9rZW4u",
            "cHJvdG8uYmFua2FwaS5BY2NvdW50EhEKCWNsaWVudF9pZBgFIAEoCSJKChtH",
            "ZXRPYXV0aEFjY2Vzc1Rva2VuUmVzcG9uc2USFAoMYWNjZXNzX3Rva2VuGAEg",
            "ASgJEhUKDWV4cGlyZXNfaW5fbXMYAiABKAMiZwoSVmVyaWZ5QWxpYXNSZXF1",
            "ZXN0EgsKA2JpYxgBIAEoCRIRCgltZW1iZXJfaWQYAiABKAkSMQoFYWxpYXMY",
            "AyABKAsyIi5pby50b2tlbi5wcm90by5jb21tb24uYWxpYXMuQWxpYXMiSwoT",
            "VmVyaWZ5QWxpYXNSZXNwb25zZRI0CgZtZW1iZXIYASABKAsyJC5pby50b2tl",
            "bi5wcm90by5jb21tb24ubWVtYmVyLk1lbWJlcjKPDgoLRmFua1NlcnZpY2US",
            "fgoJQWRkQ2xpZW50EiguaW8udG9rZW4ucHJvdG8uYmFua2FwaS5BZGRDbGll",
            "bnRSZXF1ZXN0GikuaW8udG9rZW4ucHJvdG8uYmFua2FwaS5BZGRDbGllbnRS",
            "ZXNwb25zZSIcgtPkkwIWGhQvYmFua3Mve2JpY30vY2xpZW50cxKKAQoJR2V0",
            "Q2xpZW50EiguaW8udG9rZW4ucHJvdG8uYmFua2FwaS5HZXRDbGllbnRSZXF1",
            "ZXN0GikuaW8udG9rZW4ucHJvdG8uYmFua2FwaS5HZXRDbGllbnRSZXNwb25z",
            "ZSIogtPkkwIiEiAvYmFua3Mve2JpY30vY2xpZW50cy97Y2xpZW50X2lkfRKW",
            "AQoKQWRkQWNjb3VudBIpLmlvLnRva2VuLnByb3RvLmJhbmthcGkuQWRkQWNj",
            "b3VudFJlcXVlc3QaKi5pby50b2tlbi5wcm90by5iYW5rYXBpLkFkZEFjY291",
            "bnRSZXNwb25zZSIxgtPkkwIrGikvYmFua3Mve2JpY30vY2xpZW50cy97Y2xp",
            "ZW50X2lkfS9hY2NvdW50cxKZAQoLR2V0QWNjb3VudHMSKi5pby50b2tlbi5w",
            "cm90by5iYW5rYXBpLkdldEFjY291bnRzUmVxdWVzdBorLmlvLnRva2VuLnBy",
            "b3RvLmJhbmthcGkuR2V0QWNjb3VudHNSZXNwb25zZSIxgtPkkwIrEikvYmFu",
            "a3Mve2JpY30vY2xpZW50cy97Y2xpZW50X2lkfS9hY2NvdW50cxKnAQoKR2V0",
            "QWNjb3VudBIpLmlvLnRva2VuLnByb3RvLmJhbmthcGkuR2V0QWNjb3VudFJl",
            "cXVlc3QaKi5pby50b2tlbi5wcm90by5iYW5rYXBpLkdldEFjY291bnRSZXNw",
            "b25zZSJCgtPkkwI8EjovYmFua3Mve2JpY30vY2xpZW50cy97Y2xpZW50X2lk",
            "fS9hY2NvdW50cy97YWNjb3VudF9udW1iZXJ9ErEBChVBdXRob3JpemVMaW5r",
            "QWNjb3VudHMSNC5pby50b2tlbi5wcm90by5iYW5rYXBpLkF1dGhvcml6ZUxp",
            "bmtBY2NvdW50c1JlcXVlc3QaKi5pby50b2tlbi5wcm90by5iYW5rbGluay5C",
            "YW5rQXV0aG9yaXphdGlvbiI2gtPkkwIwGi4vYmFua3Mve2JpY30vY2xpZW50",
            "cy97Y2xpZW50X2lkfS9saW5rLWFjY291bnRzEt0BChhBdXRob3JpemVMaW5r",
            "QWNjb3VudHNHZXQSNC5pby50b2tlbi5wcm90by5iYW5rYXBpLkF1dGhvcml6",
            "ZUxpbmtBY2NvdW50c1JlcXVlc3QaKi5pby50b2tlbi5wcm90by5iYW5rbGlu",
            "ay5CYW5rQXV0aG9yaXphdGlvbiJfgtPkkwJZElcvYmFua3Mve2JpY30vY2xp",
            "ZW50cy97Y2xpZW50X2lkfS9saW5rLWFjY291bnRzP21lbWJlci1pZD17bWVt",
            "YmVySWR9JmFjY291bnRzPXthY2NvdW50c30SmgEKE0dldE9hdXRoQWNjZXNz",
            "VG9rZW4SMi5pby50b2tlbi5wcm90by5iYW5rYXBpLkdldE9hdXRoQWNjZXNz",
            "VG9rZW5SZXF1ZXN0GjMuaW8udG9rZW4ucHJvdG8uYmFua2FwaS5HZXRPYXV0",
            "aEFjY2Vzc1Rva2VuUmVzcG9uc2UiGoLT5JMCFBoSL2JhbmtzL3tiaWN9L3Rv",
            "a2VuErgBCg9HZXROb3RpZmljYXRpb24SLi5pby50b2tlbi5wcm90by5iYW5r",
            "YXBpLkdldE5vdGlmaWNhdGlvblJlcXVlc3QaLy5pby50b2tlbi5wcm90by5i",
            "YW5rYXBpLkdldE5vdGlmaWNhdGlvblJlc3BvbnNlIkSC0+STAj4SPC9zdWJz",
            "Y3JpYmVycy97c3Vic2NyaWJlcl9pZH0vbm90aWZpY2F0aW9ucy97bm90aWZp",
            "Y2F0aW9uX2lkfRKpAQoQR2V0Tm90aWZpY2F0aW9ucxIvLmlvLnRva2VuLnBy",
            "b3RvLmJhbmthcGkuR2V0Tm90aWZpY2F0aW9uc1JlcXVlc3QaMC5pby50b2tl",
            "bi5wcm90by5iYW5rYXBpLkdldE5vdGlmaWNhdGlvbnNSZXNwb25zZSIygtPk",
            "kwIsEiovc3Vic2NyaWJlcnMve3N1YnNjcmliZXJfaWR9L25vdGlmaWNhdGlv",
            "bnMSfAoLVmVyaWZ5QWxpYXMSKi5pby50b2tlbi5wcm90by5iYW5rYXBpLlZl",
            "cmlmeUFsaWFzUmVxdWVzdBorLmlvLnRva2VuLnByb3RvLmJhbmthcGkuVmVy",
            "aWZ5QWxpYXNSZXNwb25zZSIUgtPkkwIOIgwvdmVyaWZ5YWxpYXNCB6ICBEZh",
            "bmtiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Tokenio.Proto.Common.AliasProtos.AliasReflection.Descriptor, global::Tokenio.Proto.Common.MemberProtos.MemberReflection.Descriptor, global::Tokenio.Proto.Common.MoneyProtos.MoneyReflection.Descriptor, global::Tokenio.Proto.BankLink.BanklinkReflection.Descriptor, global::Tokenio.Proto.Common.NotificationProtos.NotificationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.Client), global::Io.Token.Proto.Bankapi.Client.Parser, new[]{ "Id", "FirstName", "LastName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.Account), global::Io.Token.Proto.Bankapi.Account.Parser, new[]{ "Name", "AccountNumber", "Balance" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.AddClientRequest), global::Io.Token.Proto.Bankapi.AddClientRequest.Parser, new[]{ "Bic", "FirstName", "LastName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.AddClientResponse), global::Io.Token.Proto.Bankapi.AddClientResponse.Parser, new[]{ "Client" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.GetClientRequest), global::Io.Token.Proto.Bankapi.GetClientRequest.Parser, new[]{ "Bic", "ClientId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.GetClientResponse), global::Io.Token.Proto.Bankapi.GetClientResponse.Parser, new[]{ "Client" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.AddAccountRequest), global::Io.Token.Proto.Bankapi.AddAccountRequest.Parser, new[]{ "Bic", "ClientId", "Name", "AccountNumber", "Balance", "Profile" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.AddAccountResponse), global::Io.Token.Proto.Bankapi.AddAccountResponse.Parser, new[]{ "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.GetAccountsRequest), global::Io.Token.Proto.Bankapi.GetAccountsRequest.Parser, new[]{ "Bic", "ClientId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.GetAccountsResponse), global::Io.Token.Proto.Bankapi.GetAccountsResponse.Parser, new[]{ "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.GetAccountRequest), global::Io.Token.Proto.Bankapi.GetAccountRequest.Parser, new[]{ "Bic", "ClientId", "AccountNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.GetAccountResponse), global::Io.Token.Proto.Bankapi.GetAccountResponse.Parser, new[]{ "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.AuthorizeLinkAccountsRequest), global::Io.Token.Proto.Bankapi.AuthorizeLinkAccountsRequest.Parser, new[]{ "Bic", "MemberId", "ClientId", "Accounts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.GetNotificationRequest), global::Io.Token.Proto.Bankapi.GetNotificationRequest.Parser, new[]{ "SubscriberId", "NotificationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.GetNotificationResponse), global::Io.Token.Proto.Bankapi.GetNotificationResponse.Parser, new[]{ "Notification" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.GetNotificationsRequest), global::Io.Token.Proto.Bankapi.GetNotificationsRequest.Parser, new[]{ "SubscriberId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.GetNotificationsResponse), global::Io.Token.Proto.Bankapi.GetNotificationsResponse.Parser, new[]{ "Notifications" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.GetOauthAccessTokenRequest), global::Io.Token.Proto.Bankapi.GetOauthAccessTokenRequest.Parser, new[]{ "Bic", "Profile", "MemberId", "Accounts", "ClientId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.GetOauthAccessTokenResponse), global::Io.Token.Proto.Bankapi.GetOauthAccessTokenResponse.Parser, new[]{ "AccessToken", "ExpiresInMs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.VerifyAliasRequest), global::Io.Token.Proto.Bankapi.VerifyAliasRequest.Parser, new[]{ "Bic", "MemberId", "Alias" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Io.Token.Proto.Bankapi.VerifyAliasResponse), global::Io.Token.Proto.Bankapi.VerifyAliasResponse.Parser, new[]{ "Member" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  /// A bank client, such as John Doe. Client can have multiple accounts.
  /// </summary>
  public sealed partial class Client : pb::IMessage<Client> {
    private static readonly pb::MessageParser<Client> _parser = new pb::MessageParser<Client>(() => new Client());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Client> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Client() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Client(Client other) : this() {
      id_ = other.id_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Client Clone() {
      return new Client(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "first_name" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_name" field.</summary>
    public const int LastNameFieldNumber = 3;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Client);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Client other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Client other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            LastName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Account : pb::IMessage<Account> {
    private static readonly pb::MessageParser<Account> _parser = new pb::MessageParser<Account>(() => new Account());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Account> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account(Account other) : this() {
      name_ = other.name_;
      accountNumber_ = other.accountNumber_;
      Balance = other.balance_ != null ? other.Balance.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account Clone() {
      return new Account(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "account_number" field.</summary>
    public const int AccountNumberFieldNumber = 4;
    private string accountNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountNumber {
      get { return accountNumber_; }
      set {
        accountNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 5;
    private global::Tokenio.Proto.Common.MoneyProtos.Money balance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tokenio.Proto.Common.MoneyProtos.Money Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Account);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Account other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (AccountNumber != other.AccountNumber) return false;
      if (!object.Equals(Balance, other.Balance)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (AccountNumber.Length != 0) hash ^= AccountNumber.GetHashCode();
      if (balance_ != null) hash ^= Balance.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (AccountNumber.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AccountNumber);
      }
      if (balance_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Balance);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (AccountNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNumber);
      }
      if (balance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Balance);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Account other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.AccountNumber.Length != 0) {
        AccountNumber = other.AccountNumber;
      }
      if (other.balance_ != null) {
        if (balance_ == null) {
          balance_ = new global::Tokenio.Proto.Common.MoneyProtos.Money();
        }
        Balance.MergeFrom(other.Balance);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            AccountNumber = input.ReadString();
            break;
          }
          case 42: {
            if (balance_ == null) {
              balance_ = new global::Tokenio.Proto.Common.MoneyProtos.Money();
            }
            input.ReadMessage(balance_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////////////////////////
  /// Requests/Responses for the API.
  /// </summary>
  public sealed partial class AddClientRequest : pb::IMessage<AddClientRequest> {
    private static readonly pb::MessageParser<AddClientRequest> _parser = new pb::MessageParser<AddClientRequest>(() => new AddClientRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddClientRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddClientRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddClientRequest(AddClientRequest other) : this() {
      bic_ = other.bic_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddClientRequest Clone() {
      return new AddClientRequest(this);
    }

    /// <summary>Field number for the "bic" field.</summary>
    public const int BicFieldNumber = 1;
    private string bic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bic {
      get { return bic_; }
      set {
        bic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "first_name" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_name" field.</summary>
    public const int LastNameFieldNumber = 3;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddClientRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddClientRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bic != other.Bic) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bic.Length != 0) hash ^= Bic.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Bic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Bic);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bic);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddClientRequest other) {
      if (other == null) {
        return;
      }
      if (other.Bic.Length != 0) {
        Bic = other.Bic;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Bic = input.ReadString();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            LastName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddClientResponse : pb::IMessage<AddClientResponse> {
    private static readonly pb::MessageParser<AddClientResponse> _parser = new pb::MessageParser<AddClientResponse>(() => new AddClientResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddClientResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddClientResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddClientResponse(AddClientResponse other) : this() {
      Client = other.client_ != null ? other.Client.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddClientResponse Clone() {
      return new AddClientResponse(this);
    }

    /// <summary>Field number for the "client" field.</summary>
    public const int ClientFieldNumber = 1;
    private global::Io.Token.Proto.Bankapi.Client client_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Io.Token.Proto.Bankapi.Client Client {
      get { return client_; }
      set {
        client_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddClientResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddClientResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Client, other.Client)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (client_ != null) hash ^= Client.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (client_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Client);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (client_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Client);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddClientResponse other) {
      if (other == null) {
        return;
      }
      if (other.client_ != null) {
        if (client_ == null) {
          client_ = new global::Io.Token.Proto.Bankapi.Client();
        }
        Client.MergeFrom(other.Client);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (client_ == null) {
              client_ = new global::Io.Token.Proto.Bankapi.Client();
            }
            input.ReadMessage(client_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetClientRequest : pb::IMessage<GetClientRequest> {
    private static readonly pb::MessageParser<GetClientRequest> _parser = new pb::MessageParser<GetClientRequest>(() => new GetClientRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetClientRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClientRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClientRequest(GetClientRequest other) : this() {
      bic_ = other.bic_;
      clientId_ = other.clientId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClientRequest Clone() {
      return new GetClientRequest(this);
    }

    /// <summary>Field number for the "bic" field.</summary>
    public const int BicFieldNumber = 1;
    private string bic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bic {
      get { return bic_; }
      set {
        bic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 2;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetClientRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetClientRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bic != other.Bic) return false;
      if (ClientId != other.ClientId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bic.Length != 0) hash ^= Bic.GetHashCode();
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Bic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Bic);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bic);
      }
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetClientRequest other) {
      if (other == null) {
        return;
      }
      if (other.Bic.Length != 0) {
        Bic = other.Bic;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Bic = input.ReadString();
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetClientResponse : pb::IMessage<GetClientResponse> {
    private static readonly pb::MessageParser<GetClientResponse> _parser = new pb::MessageParser<GetClientResponse>(() => new GetClientResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetClientResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClientResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClientResponse(GetClientResponse other) : this() {
      Client = other.client_ != null ? other.Client.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClientResponse Clone() {
      return new GetClientResponse(this);
    }

    /// <summary>Field number for the "client" field.</summary>
    public const int ClientFieldNumber = 1;
    private global::Io.Token.Proto.Bankapi.Client client_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Io.Token.Proto.Bankapi.Client Client {
      get { return client_; }
      set {
        client_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetClientResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetClientResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Client, other.Client)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (client_ != null) hash ^= Client.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (client_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Client);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (client_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Client);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetClientResponse other) {
      if (other == null) {
        return;
      }
      if (other.client_ != null) {
        if (client_ == null) {
          client_ = new global::Io.Token.Proto.Bankapi.Client();
        }
        Client.MergeFrom(other.Client);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (client_ == null) {
              client_ = new global::Io.Token.Proto.Bankapi.Client();
            }
            input.ReadMessage(client_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddAccountRequest : pb::IMessage<AddAccountRequest> {
    private static readonly pb::MessageParser<AddAccountRequest> _parser = new pb::MessageParser<AddAccountRequest>(() => new AddAccountRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountRequest(AddAccountRequest other) : this() {
      bic_ = other.bic_;
      clientId_ = other.clientId_;
      name_ = other.name_;
      accountNumber_ = other.accountNumber_;
      Balance = other.balance_ != null ? other.Balance.Clone() : null;
      profile_ = other.profile_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountRequest Clone() {
      return new AddAccountRequest(this);
    }

    /// <summary>Field number for the "bic" field.</summary>
    public const int BicFieldNumber = 1;
    private string bic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bic {
      get { return bic_; }
      set {
        bic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 2;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "account_number" field.</summary>
    public const int AccountNumberFieldNumber = 4;
    private string accountNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountNumber {
      get { return accountNumber_; }
      set {
        accountNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 5;
    private global::Tokenio.Proto.Common.MoneyProtos.Money balance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tokenio.Proto.Common.MoneyProtos.Money Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    /// <summary>Field number for the "profile" field.</summary>
    public const int ProfileFieldNumber = 6;
    private string profile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Profile {
      get { return profile_; }
      set {
        profile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bic != other.Bic) return false;
      if (ClientId != other.ClientId) return false;
      if (Name != other.Name) return false;
      if (AccountNumber != other.AccountNumber) return false;
      if (!object.Equals(Balance, other.Balance)) return false;
      if (Profile != other.Profile) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bic.Length != 0) hash ^= Bic.GetHashCode();
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (AccountNumber.Length != 0) hash ^= AccountNumber.GetHashCode();
      if (balance_ != null) hash ^= Balance.GetHashCode();
      if (Profile.Length != 0) hash ^= Profile.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Bic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Bic);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (AccountNumber.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AccountNumber);
      }
      if (balance_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Balance);
      }
      if (Profile.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Profile);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bic);
      }
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (AccountNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNumber);
      }
      if (balance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Balance);
      }
      if (Profile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Profile);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.Bic.Length != 0) {
        Bic = other.Bic;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.AccountNumber.Length != 0) {
        AccountNumber = other.AccountNumber;
      }
      if (other.balance_ != null) {
        if (balance_ == null) {
          balance_ = new global::Tokenio.Proto.Common.MoneyProtos.Money();
        }
        Balance.MergeFrom(other.Balance);
      }
      if (other.Profile.Length != 0) {
        Profile = other.Profile;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Bic = input.ReadString();
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            AccountNumber = input.ReadString();
            break;
          }
          case 42: {
            if (balance_ == null) {
              balance_ = new global::Tokenio.Proto.Common.MoneyProtos.Money();
            }
            input.ReadMessage(balance_);
            break;
          }
          case 50: {
            Profile = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddAccountResponse : pb::IMessage<AddAccountResponse> {
    private static readonly pb::MessageParser<AddAccountResponse> _parser = new pb::MessageParser<AddAccountResponse>(() => new AddAccountResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountResponse(AddAccountResponse other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountResponse Clone() {
      return new AddAccountResponse(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::Io.Token.Proto.Bankapi.Account account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Io.Token.Proto.Bankapi.Account Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::Io.Token.Proto.Bankapi.Account();
        }
        Account.MergeFrom(other.Account);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::Io.Token.Proto.Bankapi.Account();
            }
            input.ReadMessage(account_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccountsRequest : pb::IMessage<GetAccountsRequest> {
    private static readonly pb::MessageParser<GetAccountsRequest> _parser = new pb::MessageParser<GetAccountsRequest>(() => new GetAccountsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountsRequest(GetAccountsRequest other) : this() {
      bic_ = other.bic_;
      clientId_ = other.clientId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountsRequest Clone() {
      return new GetAccountsRequest(this);
    }

    /// <summary>Field number for the "bic" field.</summary>
    public const int BicFieldNumber = 1;
    private string bic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bic {
      get { return bic_; }
      set {
        bic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 2;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bic != other.Bic) return false;
      if (ClientId != other.ClientId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bic.Length != 0) hash ^= Bic.GetHashCode();
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Bic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Bic);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bic);
      }
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Bic.Length != 0) {
        Bic = other.Bic;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Bic = input.ReadString();
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccountsResponse : pb::IMessage<GetAccountsResponse> {
    private static readonly pb::MessageParser<GetAccountsResponse> _parser = new pb::MessageParser<GetAccountsResponse>(() => new GetAccountsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountsResponse(GetAccountsResponse other) : this() {
      account_ = other.account_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountsResponse Clone() {
      return new GetAccountsResponse(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Io.Token.Proto.Bankapi.Account> _repeated_account_codec
        = pb::FieldCodec.ForMessage(10, global::Io.Token.Proto.Bankapi.Account.Parser);
    private readonly pbc::RepeatedField<global::Io.Token.Proto.Bankapi.Account> account_ = new pbc::RepeatedField<global::Io.Token.Proto.Bankapi.Account>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Io.Token.Proto.Bankapi.Account> Account {
      get { return account_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!account_.Equals(other.account_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= account_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      account_.WriteTo(output, _repeated_account_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += account_.CalculateSize(_repeated_account_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountsResponse other) {
      if (other == null) {
        return;
      }
      account_.Add(other.account_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            account_.AddEntriesFrom(input, _repeated_account_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccountRequest : pb::IMessage<GetAccountRequest> {
    private static readonly pb::MessageParser<GetAccountRequest> _parser = new pb::MessageParser<GetAccountRequest>(() => new GetAccountRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountRequest(GetAccountRequest other) : this() {
      bic_ = other.bic_;
      clientId_ = other.clientId_;
      accountNumber_ = other.accountNumber_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountRequest Clone() {
      return new GetAccountRequest(this);
    }

    /// <summary>Field number for the "bic" field.</summary>
    public const int BicFieldNumber = 1;
    private string bic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bic {
      get { return bic_; }
      set {
        bic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 2;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "account_number" field.</summary>
    public const int AccountNumberFieldNumber = 3;
    private string accountNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountNumber {
      get { return accountNumber_; }
      set {
        accountNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bic != other.Bic) return false;
      if (ClientId != other.ClientId) return false;
      if (AccountNumber != other.AccountNumber) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bic.Length != 0) hash ^= Bic.GetHashCode();
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (AccountNumber.Length != 0) hash ^= AccountNumber.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Bic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Bic);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
      if (AccountNumber.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AccountNumber);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bic);
      }
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (AccountNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNumber);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.Bic.Length != 0) {
        Bic = other.Bic;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.AccountNumber.Length != 0) {
        AccountNumber = other.AccountNumber;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Bic = input.ReadString();
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
          case 26: {
            AccountNumber = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccountResponse : pb::IMessage<GetAccountResponse> {
    private static readonly pb::MessageParser<GetAccountResponse> _parser = new pb::MessageParser<GetAccountResponse>(() => new GetAccountResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountResponse(GetAccountResponse other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountResponse Clone() {
      return new GetAccountResponse(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::Io.Token.Proto.Bankapi.Account account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Io.Token.Proto.Bankapi.Account Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::Io.Token.Proto.Bankapi.Account();
        }
        Account.MergeFrom(other.Account);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::Io.Token.Proto.Bankapi.Account();
            }
            input.ReadMessage(account_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AuthorizeLinkAccountsRequest : pb::IMessage<AuthorizeLinkAccountsRequest> {
    private static readonly pb::MessageParser<AuthorizeLinkAccountsRequest> _parser = new pb::MessageParser<AuthorizeLinkAccountsRequest>(() => new AuthorizeLinkAccountsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthorizeLinkAccountsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizeLinkAccountsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizeLinkAccountsRequest(AuthorizeLinkAccountsRequest other) : this() {
      bic_ = other.bic_;
      memberId_ = other.memberId_;
      clientId_ = other.clientId_;
      accounts_ = other.accounts_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizeLinkAccountsRequest Clone() {
      return new AuthorizeLinkAccountsRequest(this);
    }

    /// <summary>Field number for the "bic" field.</summary>
    public const int BicFieldNumber = 1;
    private string bic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bic {
      get { return bic_; }
      set {
        bic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memberId" field.</summary>
    public const int MemberIdFieldNumber = 2;
    private string memberId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberId {
      get { return memberId_; }
      set {
        memberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 3;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accounts" field.</summary>
    public const int AccountsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_accounts_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> accounts_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Accounts {
      get { return accounts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthorizeLinkAccountsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthorizeLinkAccountsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bic != other.Bic) return false;
      if (MemberId != other.MemberId) return false;
      if (ClientId != other.ClientId) return false;
      if(!accounts_.Equals(other.accounts_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bic.Length != 0) hash ^= Bic.GetHashCode();
      if (MemberId.Length != 0) hash ^= MemberId.GetHashCode();
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      hash ^= accounts_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Bic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Bic);
      }
      if (MemberId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MemberId);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClientId);
      }
      accounts_.WriteTo(output, _repeated_accounts_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bic);
      }
      if (MemberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberId);
      }
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      size += accounts_.CalculateSize(_repeated_accounts_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthorizeLinkAccountsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Bic.Length != 0) {
        Bic = other.Bic;
      }
      if (other.MemberId.Length != 0) {
        MemberId = other.MemberId;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      accounts_.Add(other.accounts_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Bic = input.ReadString();
            break;
          }
          case 18: {
            MemberId = input.ReadString();
            break;
          }
          case 26: {
            ClientId = input.ReadString();
            break;
          }
          case 34: {
            accounts_.AddEntriesFrom(input, _repeated_accounts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetNotificationRequest : pb::IMessage<GetNotificationRequest> {
    private static readonly pb::MessageParser<GetNotificationRequest> _parser = new pb::MessageParser<GetNotificationRequest>(() => new GetNotificationRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetNotificationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationRequest(GetNotificationRequest other) : this() {
      subscriberId_ = other.subscriberId_;
      notificationId_ = other.notificationId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationRequest Clone() {
      return new GetNotificationRequest(this);
    }

    /// <summary>Field number for the "subscriber_id" field.</summary>
    public const int SubscriberIdFieldNumber = 1;
    private string subscriberId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubscriberId {
      get { return subscriberId_; }
      set {
        subscriberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "notification_id" field.</summary>
    public const int NotificationIdFieldNumber = 2;
    private string notificationId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotificationId {
      get { return notificationId_; }
      set {
        notificationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetNotificationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetNotificationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubscriberId != other.SubscriberId) return false;
      if (NotificationId != other.NotificationId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubscriberId.Length != 0) hash ^= SubscriberId.GetHashCode();
      if (NotificationId.Length != 0) hash ^= NotificationId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubscriberId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SubscriberId);
      }
      if (NotificationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NotificationId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubscriberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubscriberId);
      }
      if (NotificationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotificationId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetNotificationRequest other) {
      if (other == null) {
        return;
      }
      if (other.SubscriberId.Length != 0) {
        SubscriberId = other.SubscriberId;
      }
      if (other.NotificationId.Length != 0) {
        NotificationId = other.NotificationId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SubscriberId = input.ReadString();
            break;
          }
          case 18: {
            NotificationId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetNotificationResponse : pb::IMessage<GetNotificationResponse> {
    private static readonly pb::MessageParser<GetNotificationResponse> _parser = new pb::MessageParser<GetNotificationResponse>(() => new GetNotificationResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetNotificationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationResponse(GetNotificationResponse other) : this() {
      Notification = other.notification_ != null ? other.Notification.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationResponse Clone() {
      return new GetNotificationResponse(this);
    }

    /// <summary>Field number for the "notification" field.</summary>
    public const int NotificationFieldNumber = 1;
    private global::Tokenio.Proto.Common.NotificationProtos.Notification notification_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tokenio.Proto.Common.NotificationProtos.Notification Notification {
      get { return notification_; }
      set {
        notification_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetNotificationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetNotificationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Notification, other.Notification)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (notification_ != null) hash ^= Notification.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (notification_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Notification);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (notification_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Notification);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetNotificationResponse other) {
      if (other == null) {
        return;
      }
      if (other.notification_ != null) {
        if (notification_ == null) {
          notification_ = new global::Tokenio.Proto.Common.NotificationProtos.Notification();
        }
        Notification.MergeFrom(other.Notification);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (notification_ == null) {
              notification_ = new global::Tokenio.Proto.Common.NotificationProtos.Notification();
            }
            input.ReadMessage(notification_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetNotificationsRequest : pb::IMessage<GetNotificationsRequest> {
    private static readonly pb::MessageParser<GetNotificationsRequest> _parser = new pb::MessageParser<GetNotificationsRequest>(() => new GetNotificationsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetNotificationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationsRequest(GetNotificationsRequest other) : this() {
      subscriberId_ = other.subscriberId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationsRequest Clone() {
      return new GetNotificationsRequest(this);
    }

    /// <summary>Field number for the "subscriber_id" field.</summary>
    public const int SubscriberIdFieldNumber = 1;
    private string subscriberId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubscriberId {
      get { return subscriberId_; }
      set {
        subscriberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetNotificationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetNotificationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubscriberId != other.SubscriberId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubscriberId.Length != 0) hash ^= SubscriberId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubscriberId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SubscriberId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubscriberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubscriberId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetNotificationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.SubscriberId.Length != 0) {
        SubscriberId = other.SubscriberId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SubscriberId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetNotificationsResponse : pb::IMessage<GetNotificationsResponse> {
    private static readonly pb::MessageParser<GetNotificationsResponse> _parser = new pb::MessageParser<GetNotificationsResponse>(() => new GetNotificationsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetNotificationsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationsResponse(GetNotificationsResponse other) : this() {
      notifications_ = other.notifications_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNotificationsResponse Clone() {
      return new GetNotificationsResponse(this);
    }

    /// <summary>Field number for the "notifications" field.</summary>
    public const int NotificationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tokenio.Proto.Common.NotificationProtos.Notification> _repeated_notifications_codec
        = pb::FieldCodec.ForMessage(10, global::Tokenio.Proto.Common.NotificationProtos.Notification.Parser);
    private readonly pbc::RepeatedField<global::Tokenio.Proto.Common.NotificationProtos.Notification> notifications_ = new pbc::RepeatedField<global::Tokenio.Proto.Common.NotificationProtos.Notification>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tokenio.Proto.Common.NotificationProtos.Notification> Notifications {
      get { return notifications_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetNotificationsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetNotificationsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!notifications_.Equals(other.notifications_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= notifications_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      notifications_.WriteTo(output, _repeated_notifications_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += notifications_.CalculateSize(_repeated_notifications_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetNotificationsResponse other) {
      if (other == null) {
        return;
      }
      notifications_.Add(other.notifications_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            notifications_.AddEntriesFrom(input, _repeated_notifications_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetOauthAccessTokenRequest : pb::IMessage<GetOauthAccessTokenRequest> {
    private static readonly pb::MessageParser<GetOauthAccessTokenRequest> _parser = new pb::MessageParser<GetOauthAccessTokenRequest>(() => new GetOauthAccessTokenRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOauthAccessTokenRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOauthAccessTokenRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOauthAccessTokenRequest(GetOauthAccessTokenRequest other) : this() {
      bic_ = other.bic_;
      profile_ = other.profile_;
      memberId_ = other.memberId_;
      accounts_ = other.accounts_.Clone();
      clientId_ = other.clientId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOauthAccessTokenRequest Clone() {
      return new GetOauthAccessTokenRequest(this);
    }

    /// <summary>Field number for the "bic" field.</summary>
    public const int BicFieldNumber = 1;
    private string bic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bic {
      get { return bic_; }
      set {
        bic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "profile" field.</summary>
    public const int ProfileFieldNumber = 2;
    private string profile_ = "";
    /// <summary>
    /// optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Profile {
      get { return profile_; }
      set {
        profile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memberId" field.</summary>
    public const int MemberIdFieldNumber = 3;
    private string memberId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberId {
      get { return memberId_; }
      set {
        memberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accounts" field.</summary>
    public const int AccountsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Io.Token.Proto.Bankapi.Account> _repeated_accounts_codec
        = pb::FieldCodec.ForMessage(34, global::Io.Token.Proto.Bankapi.Account.Parser);
    private readonly pbc::RepeatedField<global::Io.Token.Proto.Bankapi.Account> accounts_ = new pbc::RepeatedField<global::Io.Token.Proto.Bankapi.Account>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Io.Token.Proto.Bankapi.Account> Accounts {
      get { return accounts_; }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 5;
    private string clientId_ = "";
    /// <summary>
    /// optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOauthAccessTokenRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOauthAccessTokenRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bic != other.Bic) return false;
      if (Profile != other.Profile) return false;
      if (MemberId != other.MemberId) return false;
      if(!accounts_.Equals(other.accounts_)) return false;
      if (ClientId != other.ClientId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bic.Length != 0) hash ^= Bic.GetHashCode();
      if (Profile.Length != 0) hash ^= Profile.GetHashCode();
      if (MemberId.Length != 0) hash ^= MemberId.GetHashCode();
      hash ^= accounts_.GetHashCode();
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Bic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Bic);
      }
      if (Profile.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Profile);
      }
      if (MemberId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MemberId);
      }
      accounts_.WriteTo(output, _repeated_accounts_codec);
      if (ClientId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ClientId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bic);
      }
      if (Profile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Profile);
      }
      if (MemberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberId);
      }
      size += accounts_.CalculateSize(_repeated_accounts_codec);
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOauthAccessTokenRequest other) {
      if (other == null) {
        return;
      }
      if (other.Bic.Length != 0) {
        Bic = other.Bic;
      }
      if (other.Profile.Length != 0) {
        Profile = other.Profile;
      }
      if (other.MemberId.Length != 0) {
        MemberId = other.MemberId;
      }
      accounts_.Add(other.accounts_);
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Bic = input.ReadString();
            break;
          }
          case 18: {
            Profile = input.ReadString();
            break;
          }
          case 26: {
            MemberId = input.ReadString();
            break;
          }
          case 34: {
            accounts_.AddEntriesFrom(input, _repeated_accounts_codec);
            break;
          }
          case 42: {
            ClientId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetOauthAccessTokenResponse : pb::IMessage<GetOauthAccessTokenResponse> {
    private static readonly pb::MessageParser<GetOauthAccessTokenResponse> _parser = new pb::MessageParser<GetOauthAccessTokenResponse>(() => new GetOauthAccessTokenResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOauthAccessTokenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOauthAccessTokenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOauthAccessTokenResponse(GetOauthAccessTokenResponse other) : this() {
      accessToken_ = other.accessToken_;
      expiresInMs_ = other.expiresInMs_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOauthAccessTokenResponse Clone() {
      return new GetOauthAccessTokenResponse(this);
    }

    /// <summary>Field number for the "access_token" field.</summary>
    public const int AccessTokenFieldNumber = 1;
    private string accessToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expires_in_ms" field.</summary>
    public const int ExpiresInMsFieldNumber = 2;
    private long expiresInMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ExpiresInMs {
      get { return expiresInMs_; }
      set {
        expiresInMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOauthAccessTokenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOauthAccessTokenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccessToken != other.AccessToken) return false;
      if (ExpiresInMs != other.ExpiresInMs) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      if (ExpiresInMs != 0L) hash ^= ExpiresInMs.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccessToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccessToken);
      }
      if (ExpiresInMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ExpiresInMs);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccessToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (ExpiresInMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpiresInMs);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOauthAccessTokenResponse other) {
      if (other == null) {
        return;
      }
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      if (other.ExpiresInMs != 0L) {
        ExpiresInMs = other.ExpiresInMs;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AccessToken = input.ReadString();
            break;
          }
          case 16: {
            ExpiresInMs = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VerifyAliasRequest : pb::IMessage<VerifyAliasRequest> {
    private static readonly pb::MessageParser<VerifyAliasRequest> _parser = new pb::MessageParser<VerifyAliasRequest>(() => new VerifyAliasRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyAliasRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyAliasRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyAliasRequest(VerifyAliasRequest other) : this() {
      bic_ = other.bic_;
      memberId_ = other.memberId_;
      Alias = other.alias_ != null ? other.Alias.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyAliasRequest Clone() {
      return new VerifyAliasRequest(this);
    }

    /// <summary>Field number for the "bic" field.</summary>
    public const int BicFieldNumber = 1;
    private string bic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bic {
      get { return bic_; }
      set {
        bic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "member_id" field.</summary>
    public const int MemberIdFieldNumber = 2;
    private string memberId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberId {
      get { return memberId_; }
      set {
        memberId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "alias" field.</summary>
    public const int AliasFieldNumber = 3;
    private global::Tokenio.Proto.Common.AliasProtos.Alias alias_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tokenio.Proto.Common.AliasProtos.Alias Alias {
      get { return alias_; }
      set {
        alias_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyAliasRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyAliasRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bic != other.Bic) return false;
      if (MemberId != other.MemberId) return false;
      if (!object.Equals(Alias, other.Alias)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bic.Length != 0) hash ^= Bic.GetHashCode();
      if (MemberId.Length != 0) hash ^= MemberId.GetHashCode();
      if (alias_ != null) hash ^= Alias.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Bic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Bic);
      }
      if (MemberId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MemberId);
      }
      if (alias_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Alias);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bic);
      }
      if (MemberId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberId);
      }
      if (alias_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Alias);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyAliasRequest other) {
      if (other == null) {
        return;
      }
      if (other.Bic.Length != 0) {
        Bic = other.Bic;
      }
      if (other.MemberId.Length != 0) {
        MemberId = other.MemberId;
      }
      if (other.alias_ != null) {
        if (alias_ == null) {
          alias_ = new global::Tokenio.Proto.Common.AliasProtos.Alias();
        }
        Alias.MergeFrom(other.Alias);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Bic = input.ReadString();
            break;
          }
          case 18: {
            MemberId = input.ReadString();
            break;
          }
          case 26: {
            if (alias_ == null) {
              alias_ = new global::Tokenio.Proto.Common.AliasProtos.Alias();
            }
            input.ReadMessage(alias_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VerifyAliasResponse : pb::IMessage<VerifyAliasResponse> {
    private static readonly pb::MessageParser<VerifyAliasResponse> _parser = new pb::MessageParser<VerifyAliasResponse>(() => new VerifyAliasResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyAliasResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Io.Token.Proto.Bankapi.FankReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyAliasResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyAliasResponse(VerifyAliasResponse other) : this() {
      Member = other.member_ != null ? other.Member.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyAliasResponse Clone() {
      return new VerifyAliasResponse(this);
    }

    /// <summary>Field number for the "member" field.</summary>
    public const int MemberFieldNumber = 1;
    private global::Tokenio.Proto.Common.MemberProtos.Member member_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tokenio.Proto.Common.MemberProtos.Member Member {
      get { return member_; }
      set {
        member_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyAliasResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyAliasResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Member, other.Member)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (member_ != null) hash ^= Member.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (member_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Member);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (member_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Member);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyAliasResponse other) {
      if (other == null) {
        return;
      }
      if (other.member_ != null) {
        if (member_ == null) {
          member_ = new global::Tokenio.Proto.Common.MemberProtos.Member();
        }
        Member.MergeFrom(other.Member);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (member_ == null) {
              member_ = new global::Tokenio.Proto.Common.MemberProtos.Member();
            }
            input.ReadMessage(member_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
