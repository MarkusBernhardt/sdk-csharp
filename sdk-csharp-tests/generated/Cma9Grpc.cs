// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: fank/fank/cma9.proto
// </auto-generated>
#pragma warning disable 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Io.Token.Proto.Cma9 {
  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////////////////////////
  /// CMA-9 Service REST API.
  /// </summary>
  public static partial class Cma9Service
  {
    static readonly string __ServiceName = "io.token.proto.cma9.Cma9Service";

    static readonly grpc::Marshaller<global::Io.Token.Proto.Cma9.AccountRequestsRequest> __Marshaller_AccountRequestsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Io.Token.Proto.Cma9.AccountRequestsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Io.Token.Proto.Cma9.AccountRequestsResponse> __Marshaller_AccountRequestsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Io.Token.Proto.Cma9.AccountRequestsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Io.Token.Proto.Cma9.DeleteAccountRequestsRequest> __Marshaller_DeleteAccountRequestsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Io.Token.Proto.Cma9.DeleteAccountRequestsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Io.Token.Proto.Cma9.DeleteAccountRequestsResponse> __Marshaller_DeleteAccountRequestsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Io.Token.Proto.Cma9.DeleteAccountRequestsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Io.Token.Proto.Cma9.AccountsRequest> __Marshaller_AccountsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Io.Token.Proto.Cma9.AccountsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Io.Token.Proto.Cma9.AccountsResponse> __Marshaller_AccountsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Io.Token.Proto.Cma9.AccountsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Io.Token.Proto.Cma9.AccountRequest> __Marshaller_AccountRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Io.Token.Proto.Cma9.AccountRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Io.Token.Proto.Cma9.AccountResponse> __Marshaller_AccountResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Io.Token.Proto.Cma9.AccountResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Io.Token.Proto.Cma9.AccountBalancesRequest> __Marshaller_AccountBalancesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Io.Token.Proto.Cma9.AccountBalancesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Io.Token.Proto.Cma9.AccountBalancesResponse> __Marshaller_AccountBalancesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Io.Token.Proto.Cma9.AccountBalancesResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Io.Token.Proto.Cma9.AccountTransactionsRequest> __Marshaller_AccountTransactionsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Io.Token.Proto.Cma9.AccountTransactionsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Io.Token.Proto.Cma9.AccountTransactionsResponse> __Marshaller_AccountTransactionsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Io.Token.Proto.Cma9.AccountTransactionsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Io.Token.Proto.Cma9.PaymentsRequest> __Marshaller_PaymentsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Io.Token.Proto.Cma9.PaymentsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Io.Token.Proto.Cma9.PaymentsResponse> __Marshaller_PaymentsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Io.Token.Proto.Cma9.PaymentsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Io.Token.Proto.Cma9.PaymentSubmissionsRequest> __Marshaller_PaymentSubmissionsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Io.Token.Proto.Cma9.PaymentSubmissionsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Io.Token.Proto.Cma9.PaymentSubmissionsResponse> __Marshaller_PaymentSubmissionsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Io.Token.Proto.Cma9.PaymentSubmissionsResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Io.Token.Proto.Cma9.AccountRequestsRequest, global::Io.Token.Proto.Cma9.AccountRequestsResponse> __Method_CreateAccountRequest = new grpc::Method<global::Io.Token.Proto.Cma9.AccountRequestsRequest, global::Io.Token.Proto.Cma9.AccountRequestsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAccountRequest",
        __Marshaller_AccountRequestsRequest,
        __Marshaller_AccountRequestsResponse);

    static readonly grpc::Method<global::Io.Token.Proto.Cma9.DeleteAccountRequestsRequest, global::Io.Token.Proto.Cma9.DeleteAccountRequestsResponse> __Method_RemoveAccountRequest = new grpc::Method<global::Io.Token.Proto.Cma9.DeleteAccountRequestsRequest, global::Io.Token.Proto.Cma9.DeleteAccountRequestsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveAccountRequest",
        __Marshaller_DeleteAccountRequestsRequest,
        __Marshaller_DeleteAccountRequestsResponse);

    static readonly grpc::Method<global::Io.Token.Proto.Cma9.AccountsRequest, global::Io.Token.Proto.Cma9.AccountsResponse> __Method_GetAccounts = new grpc::Method<global::Io.Token.Proto.Cma9.AccountsRequest, global::Io.Token.Proto.Cma9.AccountsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAccounts",
        __Marshaller_AccountsRequest,
        __Marshaller_AccountsResponse);

    static readonly grpc::Method<global::Io.Token.Proto.Cma9.AccountRequest, global::Io.Token.Proto.Cma9.AccountResponse> __Method_GetAccount = new grpc::Method<global::Io.Token.Proto.Cma9.AccountRequest, global::Io.Token.Proto.Cma9.AccountResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAccount",
        __Marshaller_AccountRequest,
        __Marshaller_AccountResponse);

    static readonly grpc::Method<global::Io.Token.Proto.Cma9.AccountBalancesRequest, global::Io.Token.Proto.Cma9.AccountBalancesResponse> __Method_GetAccountBalances = new grpc::Method<global::Io.Token.Proto.Cma9.AccountBalancesRequest, global::Io.Token.Proto.Cma9.AccountBalancesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAccountBalances",
        __Marshaller_AccountBalancesRequest,
        __Marshaller_AccountBalancesResponse);

    static readonly grpc::Method<global::Io.Token.Proto.Cma9.AccountTransactionsRequest, global::Io.Token.Proto.Cma9.AccountTransactionsResponse> __Method_GetAccountTransactions = new grpc::Method<global::Io.Token.Proto.Cma9.AccountTransactionsRequest, global::Io.Token.Proto.Cma9.AccountTransactionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAccountTransactions",
        __Marshaller_AccountTransactionsRequest,
        __Marshaller_AccountTransactionsResponse);

    static readonly grpc::Method<global::Io.Token.Proto.Cma9.PaymentsRequest, global::Io.Token.Proto.Cma9.PaymentsResponse> __Method_CreatePayment = new grpc::Method<global::Io.Token.Proto.Cma9.PaymentsRequest, global::Io.Token.Proto.Cma9.PaymentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreatePayment",
        __Marshaller_PaymentsRequest,
        __Marshaller_PaymentsResponse);

    static readonly grpc::Method<global::Io.Token.Proto.Cma9.PaymentSubmissionsRequest, global::Io.Token.Proto.Cma9.PaymentSubmissionsResponse> __Method_CreatePaymentSubmission = new grpc::Method<global::Io.Token.Proto.Cma9.PaymentSubmissionsRequest, global::Io.Token.Proto.Cma9.PaymentSubmissionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreatePaymentSubmission",
        __Marshaller_PaymentSubmissionsRequest,
        __Marshaller_PaymentSubmissionsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Io.Token.Proto.Cma9.Cma9Reflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Cma9Service</summary>
    public abstract partial class Cma9ServiceBase
    {
      /// <summary>
      /// Used to request information about accounts and transactions.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Io.Token.Proto.Cma9.AccountRequestsResponse> CreateAccountRequest(global::Io.Token.Proto.Cma9.AccountRequestsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Used to delete a request for account/transaction information.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Io.Token.Proto.Cma9.DeleteAccountRequestsResponse> RemoveAccountRequest(global::Io.Token.Proto.Cma9.DeleteAccountRequestsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Used to retrieve a list of accounts the AISP is authorized to access
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Io.Token.Proto.Cma9.AccountsResponse> GetAccounts(global::Io.Token.Proto.Cma9.AccountsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Used to query information about a particular account.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Io.Token.Proto.Cma9.AccountResponse> GetAccount(global::Io.Token.Proto.Cma9.AccountRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Used to query account balances.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Io.Token.Proto.Cma9.AccountBalancesResponse> GetAccountBalances(global::Io.Token.Proto.Cma9.AccountBalancesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Used to query information about an account's transactions.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Io.Token.Proto.Cma9.AccountTransactionsResponse> GetAccountTransactions(global::Io.Token.Proto.Cma9.AccountTransactionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Used to create a payment object, later to be redeemed.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Io.Token.Proto.Cma9.PaymentsResponse> CreatePayment(global::Io.Token.Proto.Cma9.PaymentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Used to submit/redeem an existing payment object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Io.Token.Proto.Cma9.PaymentSubmissionsResponse> CreatePaymentSubmission(global::Io.Token.Proto.Cma9.PaymentSubmissionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Cma9Service</summary>
    public partial class Cma9ServiceClient : grpc::ClientBase<Cma9ServiceClient>
    {
      /// <summary>Creates a new client for Cma9Service</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public Cma9ServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Cma9Service that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public Cma9ServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected Cma9ServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected Cma9ServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Used to request information about accounts and transactions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Io.Token.Proto.Cma9.AccountRequestsResponse CreateAccountRequest(global::Io.Token.Proto.Cma9.AccountRequestsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAccountRequest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Used to request information about accounts and transactions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Io.Token.Proto.Cma9.AccountRequestsResponse CreateAccountRequest(global::Io.Token.Proto.Cma9.AccountRequestsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAccountRequest, null, options, request);
      }
      /// <summary>
      /// Used to request information about accounts and transactions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Io.Token.Proto.Cma9.AccountRequestsResponse> CreateAccountRequestAsync(global::Io.Token.Proto.Cma9.AccountRequestsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAccountRequestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Used to request information about accounts and transactions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Io.Token.Proto.Cma9.AccountRequestsResponse> CreateAccountRequestAsync(global::Io.Token.Proto.Cma9.AccountRequestsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAccountRequest, null, options, request);
      }
      /// <summary>
      /// Used to delete a request for account/transaction information.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Io.Token.Proto.Cma9.DeleteAccountRequestsResponse RemoveAccountRequest(global::Io.Token.Proto.Cma9.DeleteAccountRequestsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveAccountRequest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Used to delete a request for account/transaction information.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Io.Token.Proto.Cma9.DeleteAccountRequestsResponse RemoveAccountRequest(global::Io.Token.Proto.Cma9.DeleteAccountRequestsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveAccountRequest, null, options, request);
      }
      /// <summary>
      /// Used to delete a request for account/transaction information.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Io.Token.Proto.Cma9.DeleteAccountRequestsResponse> RemoveAccountRequestAsync(global::Io.Token.Proto.Cma9.DeleteAccountRequestsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveAccountRequestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Used to delete a request for account/transaction information.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Io.Token.Proto.Cma9.DeleteAccountRequestsResponse> RemoveAccountRequestAsync(global::Io.Token.Proto.Cma9.DeleteAccountRequestsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveAccountRequest, null, options, request);
      }
      /// <summary>
      /// Used to retrieve a list of accounts the AISP is authorized to access
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Io.Token.Proto.Cma9.AccountsResponse GetAccounts(global::Io.Token.Proto.Cma9.AccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccounts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Used to retrieve a list of accounts the AISP is authorized to access
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Io.Token.Proto.Cma9.AccountsResponse GetAccounts(global::Io.Token.Proto.Cma9.AccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAccounts, null, options, request);
      }
      /// <summary>
      /// Used to retrieve a list of accounts the AISP is authorized to access
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Io.Token.Proto.Cma9.AccountsResponse> GetAccountsAsync(global::Io.Token.Proto.Cma9.AccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccountsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Used to retrieve a list of accounts the AISP is authorized to access
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Io.Token.Proto.Cma9.AccountsResponse> GetAccountsAsync(global::Io.Token.Proto.Cma9.AccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAccounts, null, options, request);
      }
      /// <summary>
      /// Used to query information about a particular account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Io.Token.Proto.Cma9.AccountResponse GetAccount(global::Io.Token.Proto.Cma9.AccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Used to query information about a particular account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Io.Token.Proto.Cma9.AccountResponse GetAccount(global::Io.Token.Proto.Cma9.AccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAccount, null, options, request);
      }
      /// <summary>
      /// Used to query information about a particular account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Io.Token.Proto.Cma9.AccountResponse> GetAccountAsync(global::Io.Token.Proto.Cma9.AccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Used to query information about a particular account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Io.Token.Proto.Cma9.AccountResponse> GetAccountAsync(global::Io.Token.Proto.Cma9.AccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAccount, null, options, request);
      }
      /// <summary>
      /// Used to query account balances.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Io.Token.Proto.Cma9.AccountBalancesResponse GetAccountBalances(global::Io.Token.Proto.Cma9.AccountBalancesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccountBalances(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Used to query account balances.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Io.Token.Proto.Cma9.AccountBalancesResponse GetAccountBalances(global::Io.Token.Proto.Cma9.AccountBalancesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAccountBalances, null, options, request);
      }
      /// <summary>
      /// Used to query account balances.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Io.Token.Proto.Cma9.AccountBalancesResponse> GetAccountBalancesAsync(global::Io.Token.Proto.Cma9.AccountBalancesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccountBalancesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Used to query account balances.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Io.Token.Proto.Cma9.AccountBalancesResponse> GetAccountBalancesAsync(global::Io.Token.Proto.Cma9.AccountBalancesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAccountBalances, null, options, request);
      }
      /// <summary>
      /// Used to query information about an account's transactions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Io.Token.Proto.Cma9.AccountTransactionsResponse GetAccountTransactions(global::Io.Token.Proto.Cma9.AccountTransactionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccountTransactions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Used to query information about an account's transactions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Io.Token.Proto.Cma9.AccountTransactionsResponse GetAccountTransactions(global::Io.Token.Proto.Cma9.AccountTransactionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAccountTransactions, null, options, request);
      }
      /// <summary>
      /// Used to query information about an account's transactions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Io.Token.Proto.Cma9.AccountTransactionsResponse> GetAccountTransactionsAsync(global::Io.Token.Proto.Cma9.AccountTransactionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccountTransactionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Used to query information about an account's transactions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Io.Token.Proto.Cma9.AccountTransactionsResponse> GetAccountTransactionsAsync(global::Io.Token.Proto.Cma9.AccountTransactionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAccountTransactions, null, options, request);
      }
      /// <summary>
      /// Used to create a payment object, later to be redeemed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Io.Token.Proto.Cma9.PaymentsResponse CreatePayment(global::Io.Token.Proto.Cma9.PaymentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePayment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Used to create a payment object, later to be redeemed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Io.Token.Proto.Cma9.PaymentsResponse CreatePayment(global::Io.Token.Proto.Cma9.PaymentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreatePayment, null, options, request);
      }
      /// <summary>
      /// Used to create a payment object, later to be redeemed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Io.Token.Proto.Cma9.PaymentsResponse> CreatePaymentAsync(global::Io.Token.Proto.Cma9.PaymentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePaymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Used to create a payment object, later to be redeemed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Io.Token.Proto.Cma9.PaymentsResponse> CreatePaymentAsync(global::Io.Token.Proto.Cma9.PaymentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreatePayment, null, options, request);
      }
      /// <summary>
      /// Used to submit/redeem an existing payment object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Io.Token.Proto.Cma9.PaymentSubmissionsResponse CreatePaymentSubmission(global::Io.Token.Proto.Cma9.PaymentSubmissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePaymentSubmission(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Used to submit/redeem an existing payment object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Io.Token.Proto.Cma9.PaymentSubmissionsResponse CreatePaymentSubmission(global::Io.Token.Proto.Cma9.PaymentSubmissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreatePaymentSubmission, null, options, request);
      }
      /// <summary>
      /// Used to submit/redeem an existing payment object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Io.Token.Proto.Cma9.PaymentSubmissionsResponse> CreatePaymentSubmissionAsync(global::Io.Token.Proto.Cma9.PaymentSubmissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePaymentSubmissionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Used to submit/redeem an existing payment object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Io.Token.Proto.Cma9.PaymentSubmissionsResponse> CreatePaymentSubmissionAsync(global::Io.Token.Proto.Cma9.PaymentSubmissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreatePaymentSubmission, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override Cma9ServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new Cma9ServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(Cma9ServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateAccountRequest, serviceImpl.CreateAccountRequest)
          .AddMethod(__Method_RemoveAccountRequest, serviceImpl.RemoveAccountRequest)
          .AddMethod(__Method_GetAccounts, serviceImpl.GetAccounts)
          .AddMethod(__Method_GetAccount, serviceImpl.GetAccount)
          .AddMethod(__Method_GetAccountBalances, serviceImpl.GetAccountBalances)
          .AddMethod(__Method_GetAccountTransactions, serviceImpl.GetAccountTransactions)
          .AddMethod(__Method_CreatePayment, serviceImpl.CreatePayment)
          .AddMethod(__Method_CreatePaymentSubmission, serviceImpl.CreatePaymentSubmission).Build();
    }

  }
}
#endregion
